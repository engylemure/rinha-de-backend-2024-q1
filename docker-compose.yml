version: '3.5'
services:
  api1: &api
    # API - Inst√¢ncia 01
    #    image: api
    build: 
      dockerfile: ./docker/api.Dockerfile
      context: ./
    hostname: api01
    depends_on:
      - db
    expose:
      - "80"
    env_file: ./env
    environment:
      - RUST_ENV=prod
      - RUST_LOG=info
      - RINHA_URL=http://intermediary_api:50051
      - TARGET_NAME=rinha
      - DATABASE_POOL_MAX_SIZE=8
      - LOGGER_OUTPUT=stdout
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.4GB'
  api2:
    # API - Instancia 02
    <<: *api
    hostname: api02
  nginx:
    # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.4GB'
  db:
    # Banco de dados
    image: postgres:15.4-alpine3.18
    hostname: db
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: rinha_de_backend
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '1.1'
          memory: '1.0GB'
networks:
  default:
    driver: bridge
    name: rinha
